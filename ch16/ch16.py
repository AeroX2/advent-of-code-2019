base = [0,1,0,-1]
def gen(n):
    while True:
        for _ in range(n):
            yield base[0]
        for _ in range(n):
            yield base[1]
        for _ in range(n):
            yield base[2]
        for _ in range(n):
            yield base[3]

n = '59773775883217736423759431065821647306353420453506194937477909478357279250527959717515453593953697526882172199401149893789300695782513381578519607082690498042922082853622468730359031443128253024761190886248093463388723595869794965934425375464188783095560858698959059899665146868388800302242666479679987279787144346712262803568907779621609528347260035619258134850854741360515089631116920328622677237196915348865412336221562817250057035898092525020837239100456855355496177944747496249192354750965666437121797601987523473707071258599440525572142300549600825381432815592726865051526418740875442413571535945830954724825314675166862626566783107780527347044' #input()
for _ in range(100):

    f = ''
    for q in range(len(n)):
        pattern = gen(q+1)
        next(pattern)
        total = 0
        for i,an in enumerate(n):
            v = next(pattern)
            #print(int(an),v)
            total += int(an)*v
        f += str(abs(total) % 10)
        #print("F",f)
    n = f
    print(f)
